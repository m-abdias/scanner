var Html5QrcodeStrings = (function () {
    function Html5QrcodeStrings() {
    }
    Html5QrcodeStrings.codeParseError = function (exception) {
        return "Erro de análise de código QR = " + exception;
    };
    Html5QrcodeStrings.errorGettingUserMedia = function (error) {
        return "Erro ao obter userMedia = " + error;
    };
    Html5QrcodeStrings.onlyDeviceSupportedError = function () {
        return "O dispositivo não suporta navigator.mediaDevices , apenas "
            + "câmeraIdOrConfig compatível neste caso é o parâmetro deviceId ";
    };
    Html5QrcodeStrings.cameraStreamingNotSupported = function () {
        return "Streaming de câmera não suportado pelo navegador.";
    };
    Html5QrcodeStrings.unableToQuerySupportedDevices = function () {
        return "Não foi possível consultar os dispositivos suportados, erro desconhecido.";
    };
    Html5QrcodeStrings.insecureContextCameraQueryError = function () {
        return "O acesso à câmera só é suportado em contexto seguro como https "
            + "ou localhost.";
    };
    return Html5QrcodeStrings;
}());
export { Html5QrcodeStrings };
var Html5QrcodeScannerStrings = (function () {
    function Html5QrcodeScannerStrings() {
    }
    Html5QrcodeScannerStrings.scanningStatus = function () {
        return "Digitalizando";
    };
    Html5QrcodeScannerStrings.idleStatus = function () {
        return "Parado";
    };
    Html5QrcodeScannerStrings.errorStatus = function () {
        return "Erro";
    };
    Html5QrcodeScannerStrings.permissionStatus = function () {
        return "Permissão";
    };
    Html5QrcodeScannerStrings.noCameraFoundErrorStatus = function () {
        return "Sem câmera";
    };
    Html5QrcodeScannerStrings.lastMatch = function (decodedText) {
        return "Última correspondência:: " + decodedText;
    };
    Html5QrcodeScannerStrings.codeScannerTitle = function () {
        return "Scanner de Código";
    };
    Html5QrcodeScannerStrings.cameraPermissionTitle = function () {
        return "Solicitar Permissões de Câmera";
    };
    Html5QrcodeScannerStrings.cameraPermissionRequesting = function () {
        return "Solicitando permissões de câmera...";
    };
    Html5QrcodeScannerStrings.noCameraFound = function () {
        return "Nenhuma câmera encontrada";
    };
    Html5QrcodeScannerStrings.scanButtonStopScanningText = function () {
        return "Parar digitalização";
    };
    Html5QrcodeScannerStrings.scanButtonStartScanningText = function () {
        return "Iniciar digitalização";
    };
    Html5QrcodeScannerStrings.scanButtonScanningStarting = function () {
        return "Iniciando Câmera...";
    };
    Html5QrcodeScannerStrings.textIfCameraScanSelected = function () {
        return "Digitalizar um arquivo de imagem";
    };
    Html5QrcodeScannerStrings.textIfFileScanSelected = function () {
        return "Digitalizar usando a câmera";
    };
    Html5QrcodeScannerStrings.selectCamera = function () {
        return "Selecionar câmera";
    };
    return Html5QrcodeScannerStrings;
}());
export { Html5QrcodeScannerStrings };
var LibraryInfoStrings = (function () {
    function LibraryInfoStrings() {
    }
    LibraryInfoStrings.builtUsing = function () {
        return "Construído";
    };
    LibraryInfoStrings.reportIssues = function () {
        return "Relatar problemas";
    };
    return LibraryInfoStrings;
}());
export { LibraryInfoStrings };
//# sourceMappingURL=strings.js.map